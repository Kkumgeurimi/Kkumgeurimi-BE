name: Deploy to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Restore SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Restore .env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Deploy with SSH
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ubuntu
          EC2_KEY: ~/.ssh/id_rsa
        run: |
          # kopring 폴더 생성
          ssh -i $EC2_KEY -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST "mkdir -p ~/kopring"

          # .env 파일만 전송
          scp -i $EC2_KEY -o StrictHostKeyChecking=no .env $EC2_USER@$EC2_HOST:~/kopring/

          ssh -i $EC2_KEY -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST "
            cd ~/kopring
            docker compose -f docker-compose.prod.yml down || true
            docker image prune -f || true
            docker compose -f docker-compose.prod.yml up -d

            echo '[Check] Health check...'
            sleep 20
            if curl -f -s http://localhost:8080/actuator/health > /dev/null; then
              echo '✅ 애플리케이션 정상 실행 중'
            else
              echo '❌ 애플리케이션 시작 실패 → 로그 출력'
              docker compose -f docker-compose.prod.yml logs app
              exit 1
            fi
          "
